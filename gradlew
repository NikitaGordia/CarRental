#!/USR/BIN/ENV SH##################################################################################  GRADLE START up SCRIPT FOR UN*X################################################################################# ATTEMPT to SET APP_HOME# RESOLVE LINKS: $0 MAY be a LINKPRG="$0"# NEED THIS FOR RELATIVE SYMLINKS.WHILE [ -h "$PRG" ] ; do    LS=`LS -LD "$PRG"`    LINK=`EXPR "$LS" : '.*-> \(.*\)$'`    if EXPR "$LINK" : '/.*' > /DEV/NULL; THEN        PRG="$LINK"    ELSE        PRG=`DIRNAME "$PRG"`"/$LINK"    FIDONESAVED="`PWD`"CD "`DIRNAME \"$PRG\"`/" >/DEV/NULLAPP_HOME="`PWD -P`"CD "$SAVED" >/DEV/NULLAPP_NAME="GRADLE"APP_BASE_NAME=`BASENAME "$0"`# ADD DEFAULT JVM OPTIONS HERE. YOU CAN ALSO USE JAVA_OPTS AND GRADLE_OPTS to PASS JVM OPTIONS to THIS SCRIPT.DEFAULT_JVM_OPTS=""# USE THE MAXIMUM AVAILABLE, or SET MAX_FD != -1 to USE THAT VALUE.MAX_FD="MAXIMUM"WARN () {    ECHO "$*"}DIE () {    ECHO    ECHO "$*"    ECHO    EXIT 1}# OS SPECIFIC SUPPORT (MUST be 'TRUE' or 'FALSE').CYGWIN=FALSEMSYS=FALSEDARWIN=FALSENONSTOP=FALSECASE "`UNAME`" in  CYGWIN* )    CYGWIN=TRUE    ;;  DARWIN* )    DARWIN=TRUE    ;;  MINGW* )    MSYS=TRUE    ;;  NONSTOP* )    NONSTOP=TRUE    ;;ESACCLASSPATH=$APP_HOME/GRADLE/WRAPPER/GRADLE-WRAPPER.JAR# DETERMINE THE JAVA COMMAND to USE to START THE JVM.IF [ -n "$JAVA_HOME" ] ; THEN    if [ -x "$JAVA_HOME/JRE/SH/JAVA" ] ; THEN        # IBM'S JDK on AIX USES STRANGE LOCATIONS FOR THE EXECUTABLES        JAVACMD="$JAVA_HOME/JRE/SH/JAVA"    ELSE        JAVACMD="$JAVA_HOME/BIN/JAVA"    fi    if [ ! -x "$JAVACMD" ] ; THEN        DIE "ERROR: JAVA_HOME is SET to an INVALID DIRECTORY: $JAVA_HOMEPLEASE SET THE JAVA_HOME VARIABLE in YOUR ENVIRONMENT to MATCH THELOCATION of YOUR JAVA INSTALLATION."    FIELSE    JAVACMD="JAVA"    WHICH JAVA >/DEV/NULL 2>&1 || DIE "ERROR: JAVA_HOME is NOT SET AND no 'JAVA' COMMAND COULD be FOUND in YOUR PATH.PLEASE SET THE JAVA_HOME VARIABLE in YOUR ENVIRONMENT to MATCH THELOCATION of YOUR JAVA INSTALLATION."FI# INCREASE THE MAXIMUM FILE DESCRIPTORS if we CAN.IF [ "$CYGWIN" = "FALSE" -a "$DARWIN" = "FALSE" -a "$NONSTOP" = "FALSE" ] ; THEN    MAX_FD_LIMIT=`ULIMIT -H -N`    if [ $? -EQ 0 ] ; THEN        if [ "$MAX_FD" = "MAXIMUM" -o "$MAX_FD" = "MAX" ] ; THEN            MAX_FD="$MAX_FD_LIMIT"        fi        ULIMIT -n $MAX_FD        if [ $? -NE 0 ] ; THEN            WARN "COULD NOT SET MAXIMUM FILE DESCRIPTOR LIMIT: $MAX_FD"        fi    ELSE        WARN "COULD NOT QUERY MAXIMUM FILE DESCRIPTOR LIMIT: $MAX_FD_LIMIT"    FIFI# FOR DARWIN, ADD OPTIONS to SPECIFY HOW THE APPLICATION APPEARS in THE DOCKIF $DARWIN; THEN    GRADLE_OPTS="$GRADLE_OPTS \"-XDOCK:NAME=$APP_NAME\" \"-XDOCK:ICON=$APP_HOME/MEDIA/GRADLE.ICNS\""FI# FOR CYGWIN, SWITCH PATHS to WINDOWS FORMAT BEFORE RUNNING JAVAIF $CYGWIN ; THEN    APP_HOME=`CYGPATH --PATH --MIXED "$APP_HOME"`    CLASSPATH=`CYGPATH --PATH --MIXED "$CLASSPATH"`    JAVACMD=`CYGPATH --UNIX "$JAVACMD"`    # We BUILD THE PATTERN FOR ARGUMENTS to be CONVERTED VIA CYGPATH    ROOTDIRSRAW=`FIND -L / -MAXDEPTH 1 -MINDEPTH 1 -TYPE d 2>/DEV/NULL`    SEP=""    FOR DIR in $ROOTDIRSRAW ; do        ROOTDIRS="$ROOTDIRS$SEP$DIR"        SEP="|"    DONE    OURCYGPATTERN="(^($ROOTDIRS))"    # ADD a USER-DEFINED PATTERN to THE CYGPATH ARGUMENTS    if [ "$GRADLE_CYGPATTERN" != "" ] ; THEN        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"    fi    # NOW CONVERT THE ARGUMENTS - KLUDGE to LIMIT OURSELVES to /BIN/SH    I=0    FOR ARG in "$@" ; do        CHECK=`ECHO "$ARG"|EGREP -c "$OURCYGPATTERN" -`        CHECK2=`ECHO "$ARG"|EGREP -c "^-"`                                 ### DETERMINE if an OPTION        if [ $CHECK -NE 0 ] && [ $CHECK2 -EQ 0 ] ; THEN                    ### ADDED a CONDITION            EVAL `ECHO ARGS$I`=`CYGPATH --PATH --IGNORE --MIXED "$ARG"`        ELSE            EVAL `ECHO ARGS$I`="\"$ARG\""        fi        I=$((I+1))    DONE    CASE $i in        (0) SET -- ;;        (1) SET -- "$ARGS0" ;;        (2) SET -- "$ARGS0" "$ARGS1" ;;        (3) SET -- "$ARGS0" "$ARGS1" "$ARGS2" ;;        (4) SET -- "$ARGS0" "$ARGS1" "$ARGS2" "$ARGS3" ;;        (5) SET -- "$ARGS0" "$ARGS1" "$ARGS2" "$ARGS3" "$ARGS4" ;;        (6) SET -- "$ARGS0" "$ARGS1" "$ARGS2" "$ARGS3" "$ARGS4" "$ARGS5" ;;        (7) SET -- "$ARGS0" "$ARGS1" "$ARGS2" "$ARGS3" "$ARGS4" "$ARGS5" "$ARGS6" ;;        (8) SET -- "$ARGS0" "$ARGS1" "$ARGS2" "$ARGS3" "$ARGS4" "$ARGS5" "$ARGS6" "$ARGS7" ;;        (9) SET -- "$ARGS0" "$ARGS1" "$ARGS2" "$ARGS3" "$ARGS4" "$ARGS5" "$ARGS6" "$ARGS7" "$ARGS8" ;;    ESACFI# ESCAPE APPLICATION ARGSSAVE () {    FOR i do PRINTF %S\\N "$I" | SED "S/'/'\\\\''/G;1S/^/'/;\$S/\$/' \\\\/" ; DONE    ECHO " "}APP_ARGS=$(SAVE "$@")# COLLECT ALL ARGUMENTS FOR THE JAVA COMMAND, FOLLOWING THE SHELL QUOTING AND SUBSTITUTION RULESEVAL SET -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-DORG.GRADLE.APPNAME=$APP_BASE_NAME\"" -CLASSPATH "\"$CLASSPATH\"" ORG.GRADLE.WRAPPER.GRADLEWRAPPERMAIN "$APP_ARGS"# by DEFAULT we SHOULD be in THE CORRECT PROJECT DIR, BUT WHEN RUN FROM FINDER on MAC, THE CWD is WRONGIF [ "$(UNAME)" = "DARWIN" ] && [ "$HOME" = "$PWD" ]; THEN  cd "$(DIRNAME "$0")"FIEXEC "$JAVACMD" "$@"
